{"ast":null,"code":"var _jsxFileName = \"/Users/gokulkrishnan/College/project/treeviz/src/AVLMAIN.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './styles/globals.css';\nimport './styles/tree.css';\nimport './BST/js_binary_search_tree.css';\nimport './AVL/js_avl_tree.css';\nimport AVLTree from './AVL/js_avl_tree';\nimport AVLTreeUI from './AVL/avl_tree_ui';\nimport createSampleTreeData from './BST/create-sample-tree-data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AVL = () => {\n  _s();\n  useEffect(() => {\n    const main = () => {\n      const avlTree = new sampleData();\n      const avlUI = new AVLTreeUI(avlTree);\n      avlUI.init();\n      avlUI.render();\n      window.avlTree = avlTree;\n    };\n    main();\n  }, []);\n  const sampleData = () => {\n    const tree = new AVLTree();\n    createSampleTreeData(tree);\n    return tree;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AVL, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AVL;\nexport default AVL;\nvar _c;\n$RefreshReg$(_c, \"AVL\");","map":{"version":3,"names":["React","useEffect","AVLTree","AVLTreeUI","createSampleTreeData","jsxDEV","_jsxDEV","AVL","_s","main","avlTree","sampleData","avlUI","init","render","window","tree","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gokulkrishnan/College/project/treeviz/src/AVLMAIN.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './styles/globals.css';\nimport './styles/tree.css';\nimport './BST/js_binary_search_tree.css';\nimport './AVL/js_avl_tree.css';\nimport AVLTree from './AVL/js_avl_tree';\nimport AVLTreeUI from './AVL/avl_tree_ui';\nimport createSampleTreeData from './BST/create-sample-tree-data';\n\n\nconst AVL = () => {\n  useEffect(() => {\n    const main = () => {\n      const avlTree = new sampleData();\n      const avlUI = new AVLTreeUI(avlTree);\n      avlUI.init();\n      avlUI.render();\n      window.avlTree = avlTree;\n    };\n\n    main();\n  }, []);\n  const sampleData = () => {\n    const tree = new AVLTree();\n    createSampleTreeData(tree);\n    return tree;\n  };\n\n  return (\n    <div>\n      {/* Add JSX for rendering components if needed */}\n    </div>\n  );\n};\n\nexport default AVL;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,sBAAsB;AAC7B,OAAO,mBAAmB;AAC1B,OAAO,iCAAiC;AACxC,OAAO,uBAAuB;AAC9B,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,oBAAoB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChBP,SAAS,CAAC,MAAM;IACd,MAAMQ,IAAI,GAAGA,CAAA,KAAM;MACjB,MAAMC,OAAO,GAAG,IAAIC,UAAU,CAAC,CAAC;MAChC,MAAMC,KAAK,GAAG,IAAIT,SAAS,CAACO,OAAO,CAAC;MACpCE,KAAK,CAACC,IAAI,CAAC,CAAC;MACZD,KAAK,CAACE,MAAM,CAAC,CAAC;MACdC,MAAM,CAACL,OAAO,GAAGA,OAAO;IAC1B,CAAC;IAEDD,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EACN,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMK,IAAI,GAAG,IAAId,OAAO,CAAC,CAAC;IAC1BE,oBAAoB,CAACY,IAAI,CAAC;IAC1B,OAAOA,IAAI;EACb,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAACZ,EAAA,CAvBID,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}