{"ast":null,"code":"import BinarySearchTreeUI from '../BST/bst-ui';\nexport default class RBTreeUI extends BinarySearchTreeUI {\n  constructor() {\n    super(...arguments);\n    this.balancePreviewVisible = true;\n    this.treeContainerSelector = '.rb-tree';\n    this.actionsContainerSelector = '.rb-actions-container';\n  }\n  template() {\n    return `\n        <div class=\"btn-group\">\n          <button id=\"insertrbnode\" class=\"btn btn-warning\">\n            Insert Node\n          </button>\n          <button id=\"removerbnode\" class=\"btn btn-dark\">\n            Remove Node\n          </button>\n        </div>\n        <div class=\"btn-group\">\n          <button id=\"deleterbtree\" class=\"btn btn-danger\">\n            Delete Tree\n          </button>\n        </div>\n          <div class=\"btn-group\">\n            <button id=\"PreviewBtn\" hidden=\"true\" class=\"btn btn-dark\">\n              Hide Balance Tree Preview\n            </button>\n          </div>\n        `;\n  }\n  init() {\n    this.setTemplate();\n    const insert = document.querySelector('#insertrbnode');\n    const removeElementBtn = document.querySelector('#removerbnode');\n    const delBtn = document.querySelector('#deleterbtree');\n    // const toggleBalancePreviewBtn = document.querySelector('#PreviewBtn');\n    insert.addEventListener('click', this.onInsertrbClick.bind(this));\n    removeElementBtn.addEventListener('click', this.onRemoverbClick.bind(this));\n    delBtn.addEventListener('click', this.onResetrbClick.bind(this));\n    // toggleBalancePreviewBtn.addEventListener('click', () => {this.resetBalancedTreeView();});\n  }\n  onInsertrbClick() {\n    const element = prompt('Enter element to insert into the tree');\n    if (!element) {\n      return;\n    }\n    if (this.tree.search(element)) {\n      alert('Element already exists in the tree.');\n      return;\n    }\n    const node = this.tree.insertrb(element);\n    this.render(this.tree.root);\n    // this.highlightNode(node);\n  }\n  onRemoverbClick() {\n    const element = prompt('Enter element to remove from the tree');\n    if (!element) {\n      return;\n    }\n    const elementExists = this.tree.search(element);\n    if (!elementExists) {\n      alert('Element not found');\n      return;\n    }\n    const removedEl = this.tree.removerb(element);\n    if (removedEl) {\n      this.highlightNode(removedEl).then(() => {\n        this.render(this.tree.root);\n      });\n    }\n  }\n  onResetrbClick() {\n    if (!this.tree.root) {\n      alert(\"Create a tree to delete\");\n      return;\n    }\n    this.highlightNode(this.tree.root).then(() => {\n      this.tree.root = null;\n      this.render(this.tree.root);\n    });\n  }\n  setTemplate() {\n    const actionsContainer = document.querySelector(this.actionsContainerSelector);\n    actionsContainer.innerHTML = this.template();\n  }\n}","map":{"version":3,"names":["BinarySearchTreeUI","RBTreeUI","constructor","arguments","balancePreviewVisible","treeContainerSelector","actionsContainerSelector","template","init","setTemplate","insert","document","querySelector","removeElementBtn","delBtn","addEventListener","onInsertrbClick","bind","onRemoverbClick","onResetrbClick","element","prompt","tree","search","alert","node","insertrb","render","root","elementExists","removedEl","removerb","highlightNode","then","actionsContainer","innerHTML"],"sources":["/Users/gokulkrishnan/College/project/treeviz/src/RB/rb-ui.js"],"sourcesContent":["import BinarySearchTreeUI  from '../BST/bst-ui';\n\n\n  export default class RBTreeUI extends BinarySearchTreeUI{\n    balancePreviewVisible = true;\n    balancedTree;\n    constructor() {\n      super(...arguments);\n      this.treeContainerSelector = '.rb-tree';\n      this.actionsContainerSelector = '.rb-actions-container';\n    }\n    template() {\n        return `\n        <div class=\"btn-group\">\n          <button id=\"insertrbnode\" class=\"btn btn-warning\">\n            Insert Node\n          </button>\n          <button id=\"removerbnode\" class=\"btn btn-dark\">\n            Remove Node\n          </button>\n        </div>\n        <div class=\"btn-group\">\n          <button id=\"deleterbtree\" class=\"btn btn-danger\">\n            Delete Tree\n          </button>\n        </div>\n          <div class=\"btn-group\">\n            <button id=\"PreviewBtn\" hidden=\"true\" class=\"btn btn-dark\">\n              Hide Balance Tree Preview\n            </button>\n          </div>\n        `;\n      }\n\n      init() {\n        this.setTemplate();\n        const insert = document.querySelector('#insertrbnode');\n        const removeElementBtn = document.querySelector('#removerbnode');\n        const delBtn = document.querySelector('#deleterbtree');\n        // const toggleBalancePreviewBtn = document.querySelector('#PreviewBtn');\n        insert.addEventListener('click', this.onInsertrbClick.bind(this));\n        removeElementBtn.addEventListener('click', this.onRemoverbClick.bind(this));\n        delBtn.addEventListener('click', this.onResetrbClick.bind(this));\n        // toggleBalancePreviewBtn.addEventListener('click', () => {this.resetBalancedTreeView();});\n      }\n      onInsertrbClick() {\n        const element = prompt('Enter element to insert into the tree');\n        if (!element) {\n          return;\n        }\n        if (this.tree.search(element)) {\n          alert('Element already exists in the tree.');\n          return;\n        }\n        const node = this.tree.insertrb(element);\n        this.render(this.tree.root);\n        // this.highlightNode(node);\n      }\n      onRemoverbClick() {\n        const element = prompt('Enter element to remove from the tree');\n        if(!element)\n        {\n          return;\n        }\n        const elementExists = this.tree.search(element);\n        if (!elementExists) {\n          alert('Element not found');\n          return;\n        }\n        const removedEl = this.tree.removerb(element);\n        if (removedEl) {\n          this.highlightNode(removedEl).then(() => {\n            this.render(this.tree.root);\n          });\n        }\n      }\n      onResetrbClick() {\n        if(!this.tree.root)\n        {\n          alert(\"Create a tree to delete\");\n          return;\n        }\n        this.highlightNode(this.tree.root).then(() => {\n          this.tree.root = null;\n          this.render(this.tree.root);\n        });\n      }\n\n      setTemplate() {\n        const actionsContainer = document.querySelector(\n          this.actionsContainerSelector\n        );\n        actionsContainer.innerHTML = this.template();\n      }\n\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}